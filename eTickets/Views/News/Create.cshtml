@model eTickets.Models.News

@{
    ViewData["Title"] = "Add News";
}

<div class="row">
    <div class="col-md-8 offset-md-2">
        <h1>Add News</h1>
        <div class="row">
            <div class="col-md-8 offset-md-2">
                <form asp-action="Create">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                    <div class="form-group">
                        <label asp-for="Title" class="control-label"></label>
                        <input asp-for="Title" class="form-control" />
                        <span asp-validation-for="Title" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <label asp-for="Description" class="control-label"></label>
                        <textarea asp-for="Description" class="form-control"></textarea>
                        <span asp-validation-for="Description" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <label asp-for="ImageURL" class="control-label"></label>
                        <input asp-for="ImageURL" class="form-control" />
                        <span asp-validation-for="ImageURL" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <label asp-for="Date" class="control-label"></label>
                        <input asp-for="Date" class="form-control" />
                        <span asp-validation-for="Date" class="text-danger"></span>
                    </div>

                    <div class="form-group mt-3">
                        <input type="submit" value="Create" class="btn btn-success" />
                        <a class="btn btn-outline-secondary" asp-action="Index">Back to List</a>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
} 